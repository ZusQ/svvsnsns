local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

local GitHubToken = "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"
local RepoOwner = "Phatdepzaicrystal"
local RepoName = "Key"
local KeyFilePath = "keys.json"
local RawKeyFileURL = "https://raw.githubusercontent.com/" .. RepoOwner .. "/" .. RepoName .. "/main/" .. KeyFilePath
local APIKeyFileURL = "https://api.github.com/repos/" .. RepoOwner .. "/" .. RepoName .. "/contents/" .. KeyFilePath

local HWID = gethwid and gethwid() or "Unknown"

local function GetKeys()
    local success, response = pcall(function()
        return game:HttpGet(RawKeyFileURL)
    end)

    if success and response then
        return HttpService:JSONDecode(response)
    else
        warn("‚ö†Ô∏è L·ªói t·∫£i danh s√°ch key t·ª´ GitHub!")
        return nil
    end
end

local function GetFileSHA()
    local success, response = pcall(function()
        return game:HttpGet(APIKeyFileURL)
    end)

    if success and response then
        local jsonResponse = HttpService:JSONDecode(response)
        return jsonResponse.sha
    else
        warn("‚ö†Ô∏è L·ªói l·∫•y SHA file tr√™n GitHub!")
        return nil
    end
end

local function EncodeBase64(data)
    return game:HttpGet("https://api64.ipify.org?format=json&data=" .. HttpService:JSONEncode(data))
end

local function UpdateKeys(keys)
    local sha = GetFileSHA()
    if not sha then
        warn("‚ö†Ô∏è Kh√¥ng l·∫•y ƒë∆∞·ª£c SHA file tr√™n GitHub!")
        return
    end

    local headers = {
        ["Authorization"] = "token " .. GitHubToken,
        ["Accept"] = "application/vnd.github.v3+json",
        ["Content-Type"] = "application/json"
    }

    local data = {
        message = "Update HWID",
        content = EncodeBase64(HttpService:JSONEncode(keys)),
        sha = sha
    }

    local success, response = pcall(function()
        return HttpService:PostAsync(APIKeyFileURL, HttpService:JSONEncode(data), Enum.HttpContentType.ApplicationJson, false, headers)
    end)

    if success then
        print("‚úÖ HWID c·∫≠p nh·∫≠t th√†nh c√¥ng tr√™n GitHub!")
    else
        warn("‚ö†Ô∏è L·ªói c·∫≠p nh·∫≠t HWID!")
    end
end

local function CheckKey()
    local keys = GetKeys()
    if not keys then return nil end

    for _, entry in pairs(keys) do
        if entry.code then
            if entry.hwid == nil then
                print("üÜï G√°n HWID m·ªõi!")
                entry.hwid = HWID
                UpdateKeys(keys)
                return entry.code
            elseif entry.hwid == HWID then
                print("‚úÖ Key h·ª£p l·ªá!")
                return entry.code
            end
        end
    end
    return nil
end

local verifiedKey = CheckKey()
if verifiedKey then
    print("‚úÖ Key h·ª£p l·ªá! Ch·∫°y script...")
    getgenv().Team = "Marines"
loadstring(game:HttpGet("https://raw.githubusercontent.com/Dex-Bear/VxezeHubHopBoss/refs/heads/main/VxezeHubHopDough.txt"))()
else
    print("‚ùå Key kh√¥ng h·ª£p l·ªá ho·∫∑c HWID ch∆∞a ƒë∆∞·ª£c ƒëƒÉng k√Ω!")
    LocalPlayer:Kick("üî¥ Key kh√¥ng h·ª£p l·ªá ho·∫∑c HWID ch∆∞a ƒë∆∞·ª£c ƒëƒÉng k√Ω!")
end
